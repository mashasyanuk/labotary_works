#include <iostream>
using namespace std;

void Rectangle intersect(Rectangle r1, Rectangle r2)
{
    Rectangle inter;
    if (r1.p1.x < r2.p2.x || r1.p2.x > r2.p1.x || r1.p1.y < r2.p2.y || r1.p2.y > r2.p1.y) // не пересекаются
    {
        inter.p1.x = inter.p1.y = inter.p2.x = inter.p2.y = 0;
    }
    else
    {
       inter.p1.x = r1.p1.x < r2.p1.x ? r2.p1.x : r1.p1.x;
       inter.p2.x = r1.p2.x < r2.p2.x ? r1.p2.x : r2.p2.x;
       inter.p1.y = r1.p1.y < r2.p1.y ? r1.p1.y : r2.p1.y;
       inter.p2.y = r1.p2.y < r2.p2.y ? r2.p2.y : r1.p2.y;
    }
    return inter;
}
int main(){
structure Point
int x{}, y{};
structure Rectangle{
Point p1{}, p2{};
};

Rectangle intersect(Rectangle r1, Rectangle r2)
{
    Rectangle inter;
    if (r1.p1.x < r2.p2.x || r1.p2.x > r2.p1.x || r1.p1.y < r2.p2.y || r1.p2.y > r2.p1.y) // не пересекаются
    {
        inter.p1.x = inter.p1.y = inter.p2.x = inter.p2.y = 0;
    }
    else
    {
       inter.p1.x = r1.p1.x < r2.p1.x ? r2.p1.x : r1.p1.x;
       inter.p2.x = r1.p2.x < r2.p2.x ? r1.p2.x : r2.p2.x;
       inter.p1.y = r1.p1.y < r2.p1.y ? r1.p1.y : r2.p1.y;
       inter.p2.y = r1.p2.y < r2.p2.y ? r2.p2.y : r1.p2.y;
    }
    return inter;
}
}
