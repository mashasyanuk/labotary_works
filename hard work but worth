#include <iostream>
#include <math.h>
#include <iomanip>
using namespace std;


int main() {
    const int R=6;

//Matrix A

    double a[R][R]{};
    double B[R][R]{};

    cout << "Matrix A"<< endl;
    for(int i=0; i<R; i++){
        for(int j=0; j<R; j++){

            a[i][j] = sqrt(i+1)+(j+1)/sin(i+1);
            B[i][j]=a[i][j];
            cout <<  setprecision(3) << a[i][j] << " ";

        }
        cout << ' '<< endl;
    }

    cout << ' '<< endl;

//Matrix B

    double max=-300000;
    double min=300000;
    int index_min_j{},index_max_j{};

    for (int i = 0; i < R; i++) {
        for (int j = 0; j < R; j++) {
            if (B[i][j] > max) {
                max = B[i][j];
                index_max_j = j;
            } else if (B[i][j] < min) {
                min = B[i][j];
                index_min_j = j;
            }
        }
    }

    for (int i = 0; i < R; i++) {
        double current = B[i][index_max_j];
        B[i][index_max_j] = B[i][index_min_j];
        B[i][index_min_j] = current;
    }

        cout << "Matrix B" << endl;
    for(int i=0; i<R; i++){
        for(int j=0; j<R; j++){
            cout << B[i][j]<< " ";
        }
        cout<< " "<<endl;
    }
//Matrix C
    double C[R][R]={};

    for(int i=0; i<R; i++){
        int N=1;

        for(int j=0; j<R; j++){
            if (j<(5-i)) {
                C[i][j]=0;
            }
            else{
                C[i][j]=N;
                N++;
            }

        }

    }
    cout << ' '<< endl;

    cout << "Matrix C" << endl;
    for(int i=0; i<R; i++){
        for(int j=0; j<R; j++){
            cout << C[i][j]<< " ";
        }
        cout<< " "<<endl;
    }

//MATRIX D = B*C
    double D[R][R];
    memcpy(&a, &D, R*R);

    for(int i=0; i<R; i++){
        for(int j=0; j<R; j++){
            for(int k=0; k<R; k++){
                D[i][j]+=B[i][k]*C[k][j] ;
            }

        }
    }
    cout << ' '<< endl;

    cout << "Matrix D" << endl;
    for(int i=0; i<R; i++){
        for(int j=0; j<R; j++){
            cout << D[i][j]<< " ";
        }
        cout<< " "<<endl;
    }

//MATRIX E перестановленная

    double E[R][R]{};
    for (int i{}; i < R; i++) {
        copy(begin(D[i]), end(D[i]), begin(E[i]));
    }

    double cur = E[4][5];
    E[4][5]= E[5][4];
    E[5][4]=cur;

    cout << ' '<< endl;
    cout << "Matrix E" << endl;
    for(int i=0; i<R; i++){
        for(int j=0; j<R; j++){
            cout << E[i][j]<< " ";
        }
        cout<< " "<<endl;
    }
    cout << ' '<< endl;

//номер столбца в котором минимальный элемент

    min=30000;
    int needed{};
    for(int i=0; i<R; i++){
        for(int j=0; j<R; j++){
            if(E[i][j]<min){
                min=E[i][j];
                needed=j;
            }
        }
    }
    cout << "Номер столбца, в котором содержится минимальный элемент матрицы  - " << needed+1;


    return 0;
}
